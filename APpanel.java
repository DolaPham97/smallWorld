package smallworld;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.util.HashMap;
import java.util.Map;


public class APpanel extends javax.swing.JPanel {

    /**
     * Creates new form APpanel
     */
    private final Graph G;
    public APpanel(Graph G) {
        this.G = G;
        initComponents();
    }

    @Override
    public void paintComponent(Graphics gg)
    {
        Map<String, int[]> data = new HashMap<>();
        Map<String, Color> data2 = new HashMap<>();
        
        Graphics2D g = (Graphics2D)gg;
        int radius = 225, smallradius = 8;
        double cx = this.getWidth()/2;
        double cy = this.getHeight()/2;
        //g.drawOval((int)cx-radius, (int)cy-radius, radius*2, radius*2);
        int num = G.V();
        //int num = 23;
        double inc = 2./num;
        //double ang = 1*Math.PI;
        int i=0;
        //Color[] cols = new Color[num];
        
        
        for(String s : G.vertices())
            
        {
            double x=0,y=0;
            switch(s.toLowerCase())
            {
                case "sun":
                    x = 30;
                    y = 20;
                    break;
                case "mushroom,fungi":
                    x = 130;
                    y = 10;
                    break;
                case "grass":
                    x= 100;
                    y= 100;
                    break;
                
                case "eagle": //s is an eagle
                    x = 200; //change to location on picture
                    y= 55;
                    break;
                case "snake": //s is a mouse
                    x= 280;
                    y= 90;
                    break;
                case "mice":
                    x= 300;
                    y= 150;
                    break;
                case "grasshopper":
                    x= 160;
                    y= 170;
                    break;
                
                default:
                    x = 70;
                    y= 250;
                    break;
            }
            data2.put(s, Color.getHSBColor(i*(1f/num), .8f, .8f));
            data.put(s, new int[]{(int)x,(int)y});
            i++;
        }
        for(String s : G.vertices())
        {
            for(String c : G.adjacentTo(s))
            {
                g.setColor(blend(data2.get(s),data2.get(c),.5));
                g.setStroke(new BasicStroke(5));
                g.drawLine(data.get(s)[0], data.get(s)[1], data.get(c)[0], data.get(c)[1]);
            }
        }
        i=0;
        for(String s : G.vertices())
        {
            g.setColor(data2.get(s));
            g.fillOval(data.get(s)[0]-smallradius, data.get(s)[1]-smallradius, smallradius*2, smallradius*2);
            g.setFont(new Font("Arial", Font.PLAIN, 20));
            g.setColor(Color.black);
            g.drawString(s, data.get(s)[0]+smallradius, data.get(s)[1]);
            i++;
        }
    }
    
    public static Color blend (Color c1, Color c2, double r)
    {
      float r1  = (float)r, r2 =  1f - r1;
      float rgb1[] = c1.getColorComponents(null), rgb2[] = c2.getColorComponents(null);
      return new Color (rgb1[0] * r1 + rgb2[0] * r2, rgb1[1] * r1 + rgb2[1] * r2, rgb1[2] * r1 + rgb2[2] * r2);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}